<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sShader</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//init

image_speed = 0;
image_index = 24;

update = false;

left = 0;
right = 0;
top = 0;
bottom = 0;
top_right = 0;//see manager ctrl

empty = 0;
inner = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>update</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>true</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>update</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>false</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//using values set by manager, we decide what shader to use
if(inner == 0){
    if(empty)
        image_index = 24;//light 
    else if(top == 0 &amp;&amp; bottom == 0 &amp;&amp; left == 0 &amp;&amp; right == 0)
        image_index = 0;//darkness
        
    else if(top == 0 &amp;&amp; bottom == 0 &amp;&amp; left &gt; 0 &amp;&amp; right == 0)
        image_index = 1;//left
    else if(top &gt; 0 &amp;&amp; bottom == 0 &amp;&amp; left == 0 &amp;&amp; right == 0)
        image_index = 2;//top
    else if(top == 0 &amp;&amp; bottom &gt; 0 &amp;&amp; left == 0 &amp;&amp; right == 0)
        image_index = 3;//bottom
    else if(top == 0 &amp;&amp; bottom == 0 &amp;&amp; left == 0 &amp;&amp; right &gt; 0)
        image_index = 4;//right
        
    else if(top == 0 &amp;&amp; bottom &gt; 0 &amp;&amp; left &gt; 0 &amp;&amp; right == 0)
        image_index = 5;//bottom left outer
    else if(top &gt; 0 &amp;&amp; bottom == 0 &amp;&amp; left &gt; 0 &amp;&amp; right == 0)
        image_index = 6;//top left outer
    else if(top == 0 &amp;&amp; bottom &gt; 0 &amp;&amp; left == 0 &amp;&amp; right &gt; 0)
        image_index = 7;//bottom right outer
    else if(top &gt; 0 &amp;&amp; bottom == 0 &amp;&amp; left == 0 &amp;&amp; right &gt; 0)
        image_index = 8;//top right outer
        
    else if(top &gt; 0 &amp;&amp; bottom &gt; 0 &amp;&amp; left == 0 &amp;&amp; right == 0)
        image_index = 9;//vertical thin straight
    else if(top == 0 &amp;&amp; bottom == 0 &amp;&amp; left &gt; 0 &amp;&amp; right &gt; 0)
        image_index = 10;//horizontal thin straight
        
    else if(top &gt; 0 &amp;&amp; bottom &gt; 0 &amp;&amp; left &gt; 0 &amp;&amp; right == 0)
        image_index = 20;//left end
    else if(top &gt; 0 &amp;&amp; bottom == 0 &amp;&amp; left &gt; 0 &amp;&amp; right &gt; 0)
        image_index = 21;//top end
    else if(top == 0 &amp;&amp; bottom &gt; 0 &amp;&amp; left &gt; 0 &amp;&amp; right &gt; 0)
        image_index = 22;//bottom end
    else if(top &gt; 0 &amp;&amp; bottom &gt; 0 &amp;&amp; left == 0 &amp;&amp; right &gt; 0)
        image_index = 23;//right end
        
    else if(top &gt; 0 &amp;&amp; bottom &gt; 0 &amp;&amp; left &gt; 0 &amp;&amp; right &gt; 0)   
        image_index = 38;//floating block  
          
}else if(inner == 1){
    
    //thin corner
    if(top &gt; 0 &amp;&amp; bottom &gt; 1 &amp;&amp; left &gt; 1 &amp;&amp; right &gt; 0)
        image_index = 26;//bottom left outer
    else if(top &gt; 1 &amp;&amp; bottom &gt; 0 &amp;&amp; left &gt; 1 &amp;&amp; right &gt; 0)
        image_index = 27;//top left outer
    else if(top &gt; 0 &amp;&amp; bottom &gt; 1 &amp;&amp; left &gt; 0 &amp;&amp; right &gt; 1)
        image_index = 28;//bottom right outer
    else if(top &gt; 1 &amp;&amp; bottom &gt; 0 &amp;&amp; left &gt; 0 &amp;&amp; right &gt; 1)
        image_index = 29;//top right outer 
    
    //inner corners
    else if(top == 0 &amp;&amp; bottom &gt; 0 &amp;&amp; left &gt; 0 &amp;&amp; right == 0)
        image_index = 11;//bottom left inner
    else if(top &gt; 0 &amp;&amp; bottom == 0 &amp;&amp; left &gt; 0 &amp;&amp; right == 0)
        image_index = 12;//top left inner
    else if(top == 0 &amp;&amp; bottom &gt; 0 &amp;&amp; left == 0 &amp;&amp; right &gt; 0)
        image_index = 13;//bottom right inner
    else if(top &gt; 0 &amp;&amp; bottom == 0 &amp;&amp; left == 0 &amp;&amp; right &gt; 0)
        image_index = 14;//top right inner 
        
    //annotated in case i forget how this all works
    else if(top &gt; 1 //if there is an opening directly above it
    &amp;&amp; bottom &gt; 0 //and an opening diagonally below
    &amp;&amp; left &gt; 0 //and an opening diagonally left
    &amp;&amp; right == 0) //and there is no opening to the right
        image_index = 32;//top left corner w/ horizontal thin  
    else if(top &gt; 0 &amp;&amp; bottom == 0 &amp;&amp; left &gt; 0 &amp;&amp; right &gt; 1)
        image_index = 33;//top right corner w/ vertical thin
    else if(top &gt; 0 &amp;&amp; bottom &gt; 1 &amp;&amp; left == 0 &amp;&amp; right &gt; 0)
        image_index = 37;//bottom right corner w/ horizontal thin 
    else if(top == 0 &amp;&amp; bottom &gt; 0 &amp;&amp; left &gt; 1 &amp;&amp; right &gt; 0)
        image_index = 36;//bottom left corner w/ vertical thin   
    else if(top &gt; 0 &amp;&amp; bottom == 0 &amp;&amp; left &gt; 1 &amp;&amp; right &gt; 0)
        image_index = 39;//top left corner w/ vertical thin
    else if(top &gt; 1 &amp;&amp; bottom &gt; 0 &amp;&amp; left == 0 &amp;&amp; right &gt; 0)
        image_index = 40; //top right corner w/ horizontal thin     
    else if(top &gt; 0 &amp;&amp; bottom &gt; 1 &amp;&amp; left &gt; 0 &amp;&amp; right == 0)
        image_index = 41;//bottom right corner w/ vertical thin 
    else if(top == 0 &amp;&amp; bottom &gt; 0 &amp;&amp; left &gt; 0 &amp;&amp; right &gt; 1)
        image_index = 42; //bottom left corner w/ horizontal thin
                   
}else if(inner == 2){

    if(top &gt; 0 &amp;&amp; bottom &gt; 0 &amp;&amp; left &gt; 0 &amp;&amp; right == 0)
        image_index = 15;//left T
    else if(top &gt; 0 &amp;&amp; bottom == 0 &amp;&amp; left &gt; 0 &amp;&amp; right &gt; 0)
        image_index = 16;//top T
    else if(top == 0 &amp;&amp; bottom &gt; 0 &amp;&amp; left &gt; 0 &amp;&amp; right &gt; 0)
        image_index = 17;//bottom T
    else if(top &gt; 0 &amp;&amp; bottom &gt; 0 &amp;&amp; left == 0 &amp;&amp; right &gt; 0)
        image_index = 18;//right T
    else if(top &gt; 1 &amp;&amp; bottom &gt; 1 &amp;&amp; left &gt; 0 &amp;&amp; right &gt; 0 &amp;&amp; top_right == 0)
        image_index = 30 //top thin T
    else if(top &gt; 1 &amp;&amp; bottom &gt; 1 &amp;&amp; left &gt; 0 &amp;&amp; right &gt; 0 &amp;&amp; top_right &gt; 0)
        image_index = 35 //bottom thin T 
    else if(top &gt; 0 &amp;&amp; bottom &gt; 0 &amp;&amp; left &gt; 1 &amp;&amp; right &gt; 1 &amp;&amp; top_right == 0)
        image_index = 31 //right thin T 
    else if(top &gt; 0 &amp;&amp; bottom &gt; 0 &amp;&amp; left &gt; 1 &amp;&amp; right &gt; 1 &amp;&amp; top_right &gt; 0)
        image_index = 34 //left thin T
        
    else if(top = 1 &amp;&amp; bottom = 1 &amp;&amp; left = 1 &amp;&amp; right = 1 &amp;&amp; top_right = 1)
        image_index = 48;//top left to bottom right corner overlap
    else if(top = 1 &amp;&amp; bottom = 1 &amp;&amp; left = 1 &amp;&amp; right = 1 &amp;&amp; top_right == 0)
        image_index = 47;//top right to bottom left corner overlap

}else if(inner == 3){

    if(top &gt; 0 &amp;&amp; bottom &gt; 1 &amp;&amp; left &gt; 1 &amp;&amp; right &gt; 0)
        image_index = 44;//bottom left corner to both thins
    if(top &gt; 0 &amp;&amp; bottom &gt; 1 &amp;&amp; left &gt; 0 &amp;&amp; right &gt; 1)
        image_index = 43;//bottom right corner to both thins
    if(top &gt; 1 &amp;&amp; bottom &gt; 0 &amp;&amp; left &gt; 1 &amp;&amp; right &gt; 0)
        image_index = 46;//top left corner to both sides
    if(top &gt; 1 &amp;&amp; bottom &gt; 0 &amp;&amp; left &gt; 0 &amp;&amp; right &gt; 1)
        image_index = 45;//top right corner to both sides
    
}else {
    image_index = 19;//center junction
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
